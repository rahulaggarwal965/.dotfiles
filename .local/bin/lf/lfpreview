#!/bin/sh
draw() {
    path="$(printf '%s' "$1" | sed 's/\\/\\\\/g;s/"/\\"/g')"
    printf '{"action": "add", "identifier": "preview", "x": %d, "y": %d, "width": %d, "height": %d, "scaler": "contain", "scaling_position_x": 0.5, "scaling_position_y": 0.5, "path": "%s"}\n' \
        "$x" "$y" "$width" "$height" "$path" >"$FIFO_UEBERZUG"
  exit 1
}

hash() {
    printf '%s/.cache/lf/%s' "$HOME" \
        "$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
}

cache() {
    if [ -f "$1" ]; then
        draw "$1"
    fi
}

if ! [ -f "$1" ] && ! [ -h "$1" ]; then
    exit
fi

width="$2"
height="$3"
x="$4"
y="$5"

default_x="1920"
default_y="1080"

case "$1" in
    *.7z|*.a|*.ace|*.alz|*.arc|*.arj|*.bz|*.bz2|*.cab|*.cpio|*.deb|*.gz|*.jar|\
    *.lha|*.lrz|*.lz|*.lzh|*.lzma|*.lzo|*.rar|*.rpm|*.rz|*.t7z|*.tar|*.tbz|\
    *.tbz2|*.tgz|*.tlz|*.txz|*.tZ|*.tzo|*.war|*.xz|*.Z|*.zip)
        als -- "$1"
        exit 0 ;;
    *.[1-8])
        man -- "$1" | col -bx | bat -l man -p --color=always
        exit 0 ;;
    *.pdf)
        if [ -n "$FIFO_UEBERZUG" ]; then
            cache="$(hash "$1")"
            cache "$cache.jpg"
            pdftoppm -f 1 -l 1 \
                -scale-to-x "$default_x" \
                -scale-to-y -1 \
                -singlefile \
                -jpeg \
                -- "$1" "$cache"
            draw "$cache.jpg"
        else
            pdftotext -l 3 -nopgbrk -q -- "$1" -
            exit 0
        fi ;;
    *.o)
        nm -- "$1" | less
        exit 0 ;;
    *.iso)
        iso-info --no-header -l -- "$1"
        exit 0 ;;
    *.doc)
        catdoc -- "$1"
        exit 0 ;;
    *.docx)
        docx2txt -- "$1"
        exit 0 ;;
    *.svg)
        if [ -n "$FIFO_UEBERZUG" ]; then
            cache="$(hash "$1").jpg"
            cache "$cache"
            convert -- "$1" "$cache"
            draw "$cache"
        fi ;;
esac

case "$(file -Lb --mime-type -- "$1")" in
    text/*|application/json)
        bat --color=always -p -- "$1"
        exit 0 ;;
    application/csv)
        sed 's/,\s*/,/g' "$1" | bat --color=always -p -l=csv | column -s, -t
        exit 0 ;;
    audio/*)
        mediainfo "$1"
        exit 0 ;;
    image/*)
        if [ -n "$FIFO_UEBERZUG" ]; then
            orientation="$(identify -format '%[EXIF:Orientation]\n' -- "$1")"
            if [ -n "$orientation" ] && [ "$orientation" != 1 ]; then
                cache="$(hash "$1").jpg"
                cache "$cache"
                convert -- "$1" -auto-orient "$cache"
                draw "$cache"
            else
                draw "$1"
            fi
        fi ;;
    video/*)
        if [ -n "$FIFO_UEBERZUG" ]; then
            cache="$(hash "$1").jpg"
            cache "$cache"
            ffmpegthumbnailer -i "$1" -o "$cache" -s 0
            draw "$cache"
        fi ;;
esac

header_text="File Type Classification"
header=""
len="$(( (width - (${#header_text} + 2)) / 2 ))"
if [ "$len" -gt 0 ]; then
    for i in $(seq "$len"); do
        header="-$header"
    done
    header="$header $header_text "
    for i in $(seq "$len"); do
        header="$header-"
    done
else
    header="$header_text"
fi
printf '\033[7m%s\033[0m\n' "$header"
file -Lb -- "$1" | fold -s -w "$width"
exit 0
