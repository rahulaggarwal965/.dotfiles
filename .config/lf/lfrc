# Settings
set preview true
set previewer lfpreview
set cleaner lfclear
set hidden true
set ignorecase true
set tabstop 4
set mouse true
set promptfmt "\033[38;5;208m%u\033[38;5;247m :: \033[38;5;96m%d%f"
set cursorpreviewfmt "\033[7m"
set incsearch true

# Custom Functions
cmd open ${{
	case $(file --mime-type "$f" -bL) in
	    text/html) xdg-open "$f" ;;
	    application/csv) csvlens "$f" ;;
		text/*|application/octet-stream|inode/x-empty) $EDITOR "$fx" ;;
		image/*) setsid -f sxiv_dir "$f" ;;
		audio/*) $VIDEO --audio-display=no $f ;;
		video/*) setsid -f $VIDEO "$f" -quiet >/dev/null 2>&1 ;;
		application/pdf) setsid -f $READER "$fx" >/dev/null 2>&1 ;;
		*) xdg-open "$f" ;;
	esac
}}

cmd mkdir %{{
	printf "Directory Name: "
	read ans
	mkdir "$ans"
	lf -remote "send $id select \"$ans\""
}}

cmd mkfile %{{
	printf "File Name: "
	read ans
	touch "$ans"
	lf -remote "send $id select \"$ans\""
}}

cmd chmod %{{
	printf "Mode bits: "
	read ans

	for file in "$fx"
	do
		chmod $ans $file
	done
    lf -remote "send $id reload"
}}

cmd sudomkfile ${{
	printf "File Name: "
	read ans
	sudo $EDITOR $ans
}}

cmd bulk-rename ${{
    old="$(mktemp)"
    new="$(mktemp)"
    [ -n "$fx" ] && fs="$(ls)"
    printf '%s\n' "$fx" >"$old"
    printf '%s\n' "$fx" >"$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
    paste "$old" "$new" | while IFS= read -r names; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}

cmd fzf_jump ${{
    res="$(fd --hidden | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd fzf_search ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always \
            --smart-case "
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}


cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd copy-path $readlink -f "$f" | xclip -sel clip
cmd copy-basename $basename -a -- $fx | head -c-1 | xclip -sel clip
cmd copy-image $xclip "$f" -sel clip -t image/png

# Bindings
map <c-f> :fzf_jump
map <c-s> :fzf_search
map d
map c
map e
map r
map m
map u
map [
map ]

# Set Background
map sb %setbg "$f"

# File Openers
map v $$EDITOR "$fx"

map br bulk-rename "$fx"

# Archive Mappings
map ua %aunpack "$f"

# Basic Functions
map mm mark-save
map . set hidden!
map dd delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
map ch chmod
map H top
map L bottom
map R reload
map C clear
map U unselect
map V invert

map i rename
map I :rename; cmd-delete-home
map a :rename; cmd-end
map A :rename; cmd-end; cmd-delete-home

# Mouse
map <m-up> up
map <m-down> down
map <m-left> updir
map <m-right> open

# jump list
map <c-o> jump-prev
map <tab> jump-next

# copying
map cp copy-path
map cb copy-basename
map ci copy-image

# Movement
map g/ cd /
map gc cd ~/.config
map gl cd ~/.local/share
map gs cd ~/.local/bin
map gS cd ~/Documents/upenn/sem3
map gd cd ~/Documents
map geb cd ~/Documents/ebooks
map gD cd ~/Downloads
map gp cd ~/Pictures
map gv cd ~/Videos
map ga cd ~/Music
map gnp cd ~/.local/share/nvim/site/pack/packer
map gr cd ~/repos
map gb cd ~/builds
map gw cd ~/catkin_workspaces
