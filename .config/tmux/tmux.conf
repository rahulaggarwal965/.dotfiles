# Change Prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix
# Escape time
set -sg escape-time 0
# Mouse
set -g mouse on
# Default Shell
set-option -g default-shell /usr/bin/zsh
# Default Terminal
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-environment -g COLORTERM "truecolor"
# Fix Neovim autoread
set-option -g focus-events on
# History
set -g history-limit 30000
# Options
set -g renumber-windows on
set-option -g set-titles on
# Window options
setw -g mode-keys vi
setw -g automatic-rename
setw -g monitor-activity on
setw -g aggressive-resize on
# Bindings
bind-key r source-file ~/.config/tmux/tmux.conf
bind-key s split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"
bind-key h previous-window
bind-key l next-window
bind-key Enter break-pane
# Vim Pane Navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# Vim copy
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -i -sel clip'
# Resizing panes
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "resize-pane -L 5"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "resize-pane -D 5"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "resize-pane -U 5"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "resize-pane -R 5"
bind-key -T copy-mode-vi M-h resize-pane -L 10
bind-key -T copy-mode-vi M-j resize-pane -D 5
bind-key -T copy-mode-vi M-k resize-pane -U 5
bind-key -T copy-mode-vi M-l resize-pane -R 10
# Unbindings
unbind j
unbind C-b
unbind '"'
unbind %
# Status Bar
set-option -g status on
set -g status-bg default
set -g status-justify left
set -g status-style 'fg=colour0'
set -g status-left ''
set -g status-right-length 200
set -g status-right "#[fg=#1f1f1f]░▒▓█#[bg=#1f1f1f,fg=colour13,italics]Session: #S#[bg=default,fg=#1f1f1f,none]█▒"
set -g message-style "bg=#1f1f1f,fg=colour7"
set -g message-command-style "bg=#1f1f1f,fg=#ff8700"
set -g mode-style "bg=colour4,fg=#1f1f1f"
set -g pane-border-style "fg=#1f1f1f"
set -g pane-active-border-style "fg=#ff8700"
set -g display-panes-active-colour "#ff8700"
set -g status-position bottom
set -g window-status-activity-style none
set -g window-status-format "#[fg=#1f1f1f]░▒▓█#[bg=#1f1f1f]#{?window_activity_flag,#[fg=#ff8700],#[fg=colour4]}#W "
set -g window-status-current-format "#[fg=colour4]░▒▓█#[bg=colour4,fg=#1f1f1f]#W "
